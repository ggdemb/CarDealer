// <auto-generated />
using System;
using CarDealer.Domain.Sale.Car;
using CarDealer.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarDealer.Persistence.Migrations
{
    [DbContext(typeof(CarDealerContext))]
    partial class CarDealerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CarDealer.Domain.Sale.Car.AvailibleCar", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsReserved")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("StateId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Transmission")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cars");

                    b.HasDiscriminator<string>("Type");
                });

            modelBuilder.Entity("CarDealer.Domain.Sale.Car.CarHistoryItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AvailibleCarId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfItem")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AvailibleCarId");

                    b.ToTable("CarHistoryItems");
                });

            modelBuilder.Entity("CarDealer.Domain.Sale.Car.CarState", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarStates");
                });

            modelBuilder.Entity("CarDealer.Domain.Sale.Car.RegularCar", b =>
                {
                    b.HasBaseType("CarDealer.Domain.Sale.Car.AvailibleCar");

                    b.HasDiscriminator().HasValue("Regular");
                });

            modelBuilder.Entity("CarDealer.Domain.Sale.Car.SportCar", b =>
                {
                    b.HasBaseType("CarDealer.Domain.Sale.Car.AvailibleCar");

                    b.HasDiscriminator().HasValue("Sport");
                });

            modelBuilder.Entity("CarDealer.Domain.Sale.Car.AvailibleCar", b =>
                {
                    b.HasOne("CarDealer.Domain.Sale.Car.CarState", "State")
                        .WithMany("Cars")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CarDealer.Domain.Sale.Car.CarMileage", "CurrentMileage", b1 =>
                        {
                            b1.Property<long>("AvailibleCarId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("MileageInKm")
                                .HasColumnType("int");

                            b1.HasKey("AvailibleCarId");

                            b1.ToTable("Cars");

                            b1.WithOwner()
                                .HasForeignKey("AvailibleCarId");
                        });

                    b.OwnsOne("CarDealer.Domain.Sale.Car.CarName", "Name", b1 =>
                        {
                            b1.Property<long>("AvailibleCarId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Brand")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Model")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AvailibleCarId");

                            b1.ToTable("Cars");

                            b1.WithOwner()
                                .HasForeignKey("AvailibleCarId");
                        });

                    b.OwnsOne("CarDealer.Domain.Sale.Car.Engine", "Engine", b1 =>
                        {
                            b1.Property<long>("AvailibleCarId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Type")
                                .HasColumnType("int");

                            b1.HasKey("AvailibleCarId");

                            b1.ToTable("Cars");

                            b1.WithOwner()
                                .HasForeignKey("AvailibleCarId");

                            b1.OwnsOne("CarDealer.Domain.Sale.Car.BatteryCapacity", "BatteryCapacity", b2 =>
                                {
                                    b2.Property<long>("EngineAvailibleCarId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<decimal>("CapacityInKwh")
                                        .HasColumnType("decimal(18,2)");

                                    b2.HasKey("EngineAvailibleCarId");

                                    b2.ToTable("Cars");

                                    b2.WithOwner()
                                        .HasForeignKey("EngineAvailibleCarId");
                                });

                            b1.OwnsOne("CarDealer.Domain.Sale.Car.EngineDisplacement", "EngineCapacity", b2 =>
                                {
                                    b2.Property<long>("EngineAvailibleCarId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<decimal>("DisplacementInCm3")
                                        .HasColumnType("decimal(18,2)");

                                    b2.HasKey("EngineAvailibleCarId");

                                    b2.ToTable("Cars");

                                    b2.WithOwner()
                                        .HasForeignKey("EngineAvailibleCarId");
                                });

                            b1.OwnsOne("CarDealer.Domain.Sale.Car.EuroStandard", "EuroStandard", b2 =>
                                {
                                    b2.Property<long>("EngineAvailibleCarId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("bigint")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<int>("Value")
                                        .HasColumnType("int");

                                    b2.HasKey("EngineAvailibleCarId");

                                    b2.ToTable("Cars");

                                    b2.WithOwner()
                                        .HasForeignKey("EngineAvailibleCarId");
                                });
                        });

                    b.OwnsOne("CarDealer.Domain.SharedKernel.Pln", "BasePrice", b1 =>
                        {
                            b1.Property<long>("AvailibleCarId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("AvailibleCarId");

                            b1.ToTable("Cars");

                            b1.WithOwner()
                                .HasForeignKey("AvailibleCarId");
                        });
                });

            modelBuilder.Entity("CarDealer.Domain.Sale.Car.CarHistoryItem", b =>
                {
                    b.HasOne("CarDealer.Domain.Sale.Car.AvailibleCar", null)
                        .WithMany("CarHistory")
                        .HasForeignKey("AvailibleCarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("CarDealer.Domain.Sale.Car.CarMileage", "Mileage", b1 =>
                        {
                            b1.Property<long>("CarHistoryItemId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("bigint")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("MileageInKm")
                                .HasColumnType("int");

                            b1.HasKey("CarHistoryItemId");

                            b1.ToTable("CarHistoryItems");

                            b1.WithOwner()
                                .HasForeignKey("CarHistoryItemId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
